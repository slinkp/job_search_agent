#!/bin/bash

# Fix environment for cursor

HERE=$( cd "${0%/*}" 2> /dev/null; echo "$PWD"/ )
source $HERE/.direnv/python-3.13/bin/activate

# TODO - fix why these are needed at import time?
# it messes up tests run by the cursor agent which
# doesn't load my direnv settings.
# Putting these here as a temporary hack.

export TAVILY_API_KEY="test_key"
export OPENAI_API_KEY="test_key"
export SHEET_DOC_ID="sheet_xyz"
export TAB_1_GID='0'  # Main tab for companies
export TAB_1_RANGE='Active!A3:AE'  # Remember ranges are half-open

export TEST_SHEET_DOC_ID='sheet_test_xyz'
export TEST_TAB_1_GID='xyz'
export TEST_TAB_1_RANGE="$TAB_1_RANGE"

# Parse arguments
RUN_PYTHON=false
RUN_JS=false
PYTEST_ARGS=()

# Default behavior: run both if no args
if [ $# -eq 0 ]; then
    RUN_PYTHON=true
    RUN_JS=true
else
    # Check each argument
    for arg in "$@"; do
        case "$arg" in
            --py|--python)
                RUN_PYTHON=true
                ;;
            --js)
                RUN_JS=true
                ;;
            --all)
                RUN_PYTHON=true
                RUN_JS=true
                ;;
            *)
                # Pass through any other arguments to pytest
                PYTEST_ARGS+=("$arg")
                ;;
        esac
    done
fi

if [ "$RUN_PYTHON" = true ]; then
    # Run Python tests with coverage
    coverage run -m pytest "${PYTEST_ARGS[@]}"
    PYTHON_EXIT=$?
    # Always show coverage report
    coverage report -m && coverage html
else
    echo "Skipping python tests"
    PYTHON_EXIT=0
fi

if [ "$RUN_JS" = true ]; then
    # Run JavaScript tests with coverage in UTC timezone
    TZ=UTC npm run test:coverage -- --run
    JS_EXIT=$?
else
    echo "Skipping js tests"
    JS_EXIT=0
fi

EXIT_CODE=0

echo '=== Test summary ================================================'
echo

if [ "$RUN_PYTHON" = true ]; then
    if [ $PYTHON_EXIT -ne 0 ]; then
        EXIT_CODE=$PYTHON_EXIT
        echo ' !!! Python tests FAILED' >&2
    else
        echo ' Python tests ok'
    fi
fi

if [ "$RUN_JS" = true ]; then
    if [ $JS_EXIT -ne 0 ]; then
        EXIT_CODE=$JS_EXIT
        echo ' !!! JS tests FAILED' >&2
    else
        echo ' JS tests ok'
    fi
fi
echo
exit $EXIT_CODE
