---
description: Standards for writing Python tests using pytest, fixtures, and mocking
globs: tests/**/test*.py
alwaysApply: false
---
# Python Testing Standards

- Use pytest, not unittest.
- Prefer fixtures for reusable setup; don't prefix fixtures with `test_`.
- Mock with `mock.patch`/`mock.patch.object` and ALWAYS use `autospec=True` (or `spec=...`).
  - Use `monkeypatch` only for env vars, dicts, or import paths.
- Parameterize similar cases with `@pytest.mark.parametrize`.
- Avoid assertions about `len()`. Make assertions about specific values first, then only fall back to `len()` if needed.
- Any tests of database must use model and repository methods instead of raw SQL.
  - Exception: Raw SQL is only allowed when deliberately testing abnormal
    or bad data or relations that correct code shouldn't be able to create.
Reviewer notes:
- Reject all usage of mocking without `autospec` or `spec` (unless justified).
- Reject `monkeypatch` used to mock methods/functions.
